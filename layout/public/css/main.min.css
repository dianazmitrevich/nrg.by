*{margin:0;padding:0;-webkit-box-sizing:border-box;box-sizing:border-box}html{font-size:16px;line-height:1;scroll-behavior:smooth}body{font:400 1rem "Cormorant",serif;overflow-x:hidden;overflow-y:scroll;color:#000}.container{width:100%;position:relative;max-width:1060px;margin-left:auto;margin-right:auto}.index-page .container{padding:0 20px}a{text-decoration:none;color:unset;cursor:pointer}.g-wrap{min-width:400px;margin:0 auto}.outer-bg{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin:0 auto;overflow:hidden}.show{opacity:1!important;visibility:visible!important;display:block!important}.d-none{display:none}.stop-scroll{overflow:hidden}main{width:100%;position:relative}.btn{font:700 16px "Cormorant",serif;display:block;background:#756d7b;color:#fff;padding:11px 22px;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;border-radius:10px;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;border:0;cursor:pointer;-webkit-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;transition:all .2s ease-in-out;white-space:nowrap}.btn img,.btn svg{pointer-events:none}@media (min-width:768px){.container{max-width:700px}}@media (min-width:1024px){.container{max-width:990px}}@media (min-width:1140px){.container{max-width:1100px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */